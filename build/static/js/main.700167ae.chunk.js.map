{"version":3,"sources":["config.js","Logout.js","Login.js","AuthenticatedPage.js","ConfirmationPage.js","Register.js","ForgotPassword.js","ResetPassword.js","App.js","index.js"],"names":["userPool","CognitoUserPool","UserPoolId","ClientId","Logout","navigate","useNavigate","useEffect","async","getCurrentUser","signOut","localStorage","removeItem","message","success","error","console","logout","Title","Typography","Login","form","Form","useForm","loading","setLoading","useState","_jsxs","style","maxWidth","margin","children","_jsx","level","onFinish","email","password","values","authenticationData","Username","Password","authenticationDetails","AuthenticationDetails","CognitoUser","Pool","authenticateUser","onSuccess","result","accessToken","getAccessToken","getJwtToken","setItem","onFailure","err","Item","name","rules","required","type","Input","placeholder","Button","htmlType","block","Space","Link","to","Paragraph","AuthenticatedPage","textAlign","icon","LogoutOutlined","color","ConfirmationPage","confirmationCode","getItem","confirmRegistration","Register","attributeList","CognitoUserAttribute","Name","Value","Promise","resolve","reject","signUp","min","ForgotPassword","forgotPassword","data","state","ResetPassword","_location$state","useLocation","code","newPassword","confirmPassword","App","isAuthenticated","setIsAuthenticated","React","checkAuthentication","window","addEventListener","removeEventListener","Router","Routes","Route","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.700167ae.chunk.js","sourcesContent":["import { CognitoUserPool, CognitoUserAttribute } from 'amazon-cognito-identity-js';\nconst poolData = {\n      UserPoolId: 'ap-south-1_R7qEwjagO',\n      ClientId: '2a3498ir6ad8acsc7rono1uepa',\n    };\nexport const userPool = new CognitoUserPool(poolData);\n","import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { message } from 'antd';\nimport { userPool } from './config';\n\nconst Logout = () => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const logout = async () => {\n      try {\n        await userPool.getCurrentUser().signOut();\n        localStorage.removeItem('accessToken');\n        message.success('Logged out successfully');\n        navigate('/login');\n      } catch (error) {\n        console.error('Error logging out:', error);\n        message.error('Error logging out');\n      }\n    };\n\n    logout();\n  }, [navigate]);\n\n  return null;\n};\n\nexport default Logout;\n","import React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { CognitoUser, AuthenticationDetails } from 'amazon-cognito-identity-js';\nimport { Button, Form, Input, message, Typography, Space } from 'antd';\nimport { userPool } from './config';\n\nconst { Title } = Typography;\n\nconst Login = () => {\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const onFinish = async (values) => {\n    setLoading(true);\n\n    const { email, password } = values;\n\n    const authenticationData = {\n      Username: email,\n      Password: password,\n    };\n\n    const authenticationDetails = new AuthenticationDetails(authenticationData);\n\n    const cognitoUser = new CognitoUser({\n      Username: email,\n      Pool: userPool,\n    });\n\n    cognitoUser.authenticateUser(authenticationDetails, {\n      onSuccess: (result) => {\n        const accessToken = result.getAccessToken().getJwtToken();\n        localStorage.setItem('accessToken', accessToken);\n        message.success('Login successful');\n        navigate('/authenticated');\n      },\n      onFailure: (err) => {\n        message.error(err.message);\n        setLoading(false);\n      },\n    });\n  };\n\n  return (\n    <div style={{ maxWidth: 400, margin: '0 auto' }}>\n      <Title level={2}>Login</Title>\n      <Form form={form} onFinish={onFinish}>\n        <Form.Item\n          name=\"email\"\n          rules={[\n            {\n              required: true,\n              type: 'email',\n              message: 'Please enter a valid email address',\n            },\n          ]}\n        >\n          <Input placeholder=\"Email\" />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: 'Please enter your password',\n            },\n          ]}\n        >\n          <Input.Password placeholder=\"Password\" />\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading} block>\n            Login\n          </Button>\n        </Form.Item>\n        <Form.Item>\n          <Space>\n          <Link to=\"/forgot-password\">Forgot Password?</Link>\n          <Link to=\"/register\">Sign Up</Link>\n          </Space>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Typography } from 'antd';\nimport { LogoutOutlined } from '@ant-design/icons';\n\nconst { Title, Paragraph } = Typography;\n\nconst AuthenticatedPage = () => {\n  return (\n    <div style={{ maxWidth: 600, margin: '0 auto', textAlign: 'center' }}>\n      <Title>Welcome!</Title>\n      <Paragraph>You are logged in.</Paragraph>\n      <Button type=\"primary\" icon={<LogoutOutlined />}>\n        <Link to=\"/logout\" style={{ color: 'white' }}>\n          Logout\n        </Link>\n      </Button>\n    </div>\n  );\n};\n\nexport default AuthenticatedPage;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { CognitoUser } from 'amazon-cognito-identity-js';\nimport { userPool } from './config';\nimport { Button, Form, Input, message, Typography } from 'antd';\n\nconst { Title } = Typography;\n\nconst ConfirmationPage = () => {\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const onFinish = (values) => {\n    setLoading(true);\n\n    const { confirmationCode } = values;\n\n    const cognitoUser = new CognitoUser({\n      Username: localStorage.getItem('email'),\n      Pool: userPool,\n    });\n\n    cognitoUser.confirmRegistration(confirmationCode, true, (err, result) => {\n      if (err) {\n        message.error(err.message);\n      } else {\n        message.success('Registration confirmed successfully.');\n        navigate('/login');\n      }\n      setLoading(false);\n    });\n  };\n\n  return (\n    <div style={{ maxWidth: 400, margin: '0 auto' }}>\n      <Title level={2}>Confirm Registration</Title>\n      <Form form={form} onFinish={onFinish}>\n        <Form.Item\n          name=\"confirmationCode\"\n          rules={[\n            {\n              required: true,\n              message: 'Please enter the confirmation code',\n            },\n          ]}\n        >\n          <Input placeholder=\"Confirmation Code\" />\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading} block>\n            Confirm\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default ConfirmationPage;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { CognitoUserPool, CognitoUserAttribute } from 'amazon-cognito-identity-js';\nimport { Button, Form, Input, message, Typography } from 'antd';\nimport { userPool } from './config';\n\nconst { Title } = Typography;\n\nconst Register = () => {\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const onFinish = async (values) => {\n    setLoading(true);\n\n    const { email, password, name } = values;\n\n    const attributeList = [\n      new CognitoUserAttribute({\n        Name: 'email',\n        Value: email,\n      }),\n      new CognitoUserAttribute({\n        Name: 'name',\n        Value: name,\n      }),\n    ];\n\n    try {\n      await new Promise((resolve, reject) => {\n        userPool.signUp(email, password, attributeList, null, (err, result) => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(result);\n          }\n        });\n      });\n\n      message.success('Registration successful. Please check your email for verification.');\n      localStorage.setItem('email', email);\n      navigate('/confirmation');\n    } catch (error) {\n      message.error(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ maxWidth: 400, margin: '0 auto' }}>\n      <Title level={2}>Register</Title>\n      <Form form={form} onFinish={onFinish}>\n        <Form.Item\n          name=\"email\"\n          rules={[\n            {\n              required: true,\n              type: 'email',\n              message: 'Please enter a valid email address',\n            },\n          ]}\n        >\n          <Input placeholder=\"Email\" />\n        </Form.Item>\n        <Form.Item\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              min: 6,\n              message: 'Password must be at least 6 characters',\n            },\n          ]}\n        >\n          <Input.Password placeholder=\"Password\" />\n        </Form.Item>\n        <Form.Item\n          name=\"name\"\n          rules={[\n            {\n              required: true,\n              message: 'Please enter your name',\n            },\n          ]}\n        >\n          <Input placeholder=\"Name\" />\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading} block>\n            Register\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { CognitoUser } from 'amazon-cognito-identity-js';\nimport { Button, Form, Input, message, Typography } from 'antd';\nimport { userPool } from './config';\n\nconst { Title } = Typography;\n\nconst ForgotPassword = () => {\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const onFinish = async (values) => {\n    setLoading(true);\n\n    const { email } = values;\n\n    const cognitoUser = new CognitoUser({\n      Username: email,\n      Pool: userPool,\n    });\n\n    cognitoUser.forgotPassword({\n      onSuccess: (data) => {\n        message.success('Password reset code sent successfully');\n        navigate('/reset-password', { state: { email } });\n      },\n      onFailure: (err) => {\n        message.error(err.message);\n        setLoading(false);\n      },\n    });\n  };\n\n  return (\n    <div style={{ maxWidth: 400, margin: '0 auto' }}>\n      <Title level={2}>Forgot Password</Title>\n      <Form form={form} onFinish={onFinish}>\n        <Form.Item\n          name=\"email\"\n          rules={[\n            {\n              required: true,\n              type: 'email',\n              message: 'Please enter a valid email address',\n            },\n          ]}\n        >\n          <Input placeholder=\"Email\" />\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading} block>\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n","import React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { CognitoUser } from 'amazon-cognito-identity-js';\nimport { Button, Form, Input, message, Typography } from 'antd';\nimport { userPool } from './config';\n\nconst { Title } = Typography;\n\nconst ResetPassword = () => {\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const email = location.state?.email;\n\n  const onFinish = async (values) => {\n    setLoading(true);\n\n    const { code, newPassword } = values;\n\n    const cognitoUser = new CognitoUser({\n      Username: email,\n      Pool: userPool,\n    });\n\n    cognitoUser.confirmPassword(code, newPassword, {\n      onSuccess: () => {\n        message.success('Password reset successfully');\n        navigate('/login');\n      },\n      onFailure: (err) => {\n        message.error(err.message);\n        setLoading(false);\n      },\n    });\n  };\n\n  return (\n    <div style={{ maxWidth: 400, margin: '0 auto' }}>\n      <Title level={2}>Reset Password</Title>\n      <Form form={form} onFinish={onFinish}>\n        <Form.Item\n          name=\"code\"\n          rules={[\n            {\n              required: true,\n              message: 'Please enter the reset code',\n            },\n          ]}\n        >\n          <Input placeholder=\"Reset Code\" />\n        </Form.Item>\n        <Form.Item\n          name=\"newPassword\"\n          rules={[\n            {\n              required: true,\n              min: 6,\n              message: 'Password must be at least 6 characters',\n            },\n          ]}\n        >\n          <Input.Password placeholder=\"New Password\" />\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" loading={loading} block>\n            Reset Password\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default ResetPassword;","import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Logout from './Logout';\nimport Login from './Login'\nimport AuthenticatedPage from './AuthenticatedPage';\nimport ConfirmationPage from './ConfirmationPage';\nimport Register from './Register';\nimport ForgotPassword from './ForgotPassword';\nimport ResetPassword from './ResetPassword';\n\nconst App = () => {\n  const [isAuthenticated, setIsAuthenticated] = React.useState(false);\n\n  React.useEffect(() => {\n    const checkAuthentication = () => {\n      const accessToken = localStorage.getItem('accessToken');\n      setIsAuthenticated(accessToken !== null);\n    };\n\n    checkAuthentication();\n    window.addEventListener('storage', checkAuthentication);\n\n    return () => {\n      window.removeEventListener('storage', checkAuthentication);\n    };\n  }, []);\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Register />} />\n        <Route path=\"/register\" element={<Register />} />\n        <Route path=\"/logout\" element={<Logout />} />\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/confirmation\" element={<ConfirmationPage />} />\n        <Route path=\"/forgot-password\" element={<ForgotPassword />} />\n        <Route path=\"/reset-password\" element={<ResetPassword />} />\n        <Route path=\"/authenticated\" element={<AuthenticatedPage />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}